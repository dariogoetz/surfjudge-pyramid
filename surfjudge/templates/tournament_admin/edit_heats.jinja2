{% extends "base_template.html" %}

{% block nav_items %}['#nav_item_admin']{% endblock nav_items %}

{% block title %}Edit Heats{% endblock title %}


{% block css %}
{{ super() }}

<link href="/static/datepicker/css/bootstrap-datepicker.min.css" rel="stylesheet">
<link href="/static/surfjudge/css/heat.css" rel="stylesheet">
<link href="/static/bootstrap-timepicker/css/bootstrap-timepicker.min.css" rel="stylesheet">

<style>
.datepicker{z-index:1151 !important;}
.timepicker{z-index:1151 !important;}
.scrollable-menu{
    height: auto;
    max-height: 200px;
    overflow-x: hidden;
 }

</style>

{% endblock css %}


{% block content %}

<div class="container-fluid">
    <div class="row">
        <div id="tournaments_select_dropdown" class="col-3"></div>
        <div id="categories_select_dropdown" class="col-3"></div>
    </div>

    <br>


    <div id="data_section"  style="display:none">
        <button type="button" class="btn btn-standard btn-lg new_heat_btn"><span class="glyphicon glyphicon-plus">&nbsp;</span>New Heat</button>
        <br><br>

        <table class="table table-striped"
               id="heats_table"
               data-toggle="table"
               data-url="{{ mount_loc }}/do_get_heats"
               data-sort-name="name"
               date-sort-order="asc">
            <thead>
                <tr>
                    <th data-field="id">ID (for admin)</th>
                    <th data-field="name" data-sortable="true">Heat Name</th>
                    <th data-field="date" data-sortable="true">Date</th>
                    <th data-field="start_time" data-sortable="true">Start Time</th>
                    <th data-field="number_of_waves" data-sortable="true">Number of Waves</th>
                    <th data-field="duration" data-sortable="true">Duration</th>
                    <th data-field="additional_info">Additional Info</th>
                </tr>
            </thead>
        </table>
    </div>
</div>

{% endblock content %}


{% block javascript %}
{{ super() }}

<script src="/static/surfjudge/js/select_dropdown.js"></script>
<script src="/static/bootbox/bootbox.min.js"></script>

<script src="/static/datepicker/js/bootstrap-datepicker.min.js"></script>
<script src="/static/bootstrap-timepicker/js/bootstrap-timepicker.min.js"></script>
<script src="/static/plusminusinput/plusminusinput.js"></script>

<script src="/static/surfjudge/js/edit_heat.js"></script>

<script>
 $(document).ready(function(){
     $('#tournaments_select_dropdown').select_dropdown({
         label: 'Tournament',
         url: '/tournament_admin/do_get_tournaments',
         action_callback: on_tournament_select,
     });

     $('#categories_select_dropdown').select_dropdown({
         label: 'Category',
         url: '/tournament_admin/do_get_categories',
         url_requires_options: true,
         action_callback: on_category_select,
     });
 });

 // ***** DROPDOWN *****
 function on_tournament_select(selected_value){
     $('#categories_select_dropdown').select_dropdown('refresh', {'tournament_id': selected_value});
     $('#data_section').hide();
 }

 function on_category_select(selected_value){
     refresh_data_table(selected_value);
 }


 function refresh_data_table(category_id){
     query = {}
     if (typeof category_id !== 'undefined')
         query['category_id'] = category_id;

     $('#heats_table').bootstrapTable('refresh', {url:'{{ mount_loc }}/do_get_heats', query: query});
     $('#data_section').show();
     };
</script>

<script>
 function edit_heat(options){
     var html = [
         '<div class="edit_heat"></div>',
     ].join(' ');

     var bb = bootbox.dialog({
         title: 'Edit Heat',
         message: html,
         buttons: {
             'cancel': {
                 label: 'Cancel',
                 className: 'btn btn-default',
             }
         },
     });

     bb.init(function(){
         var edit_heat_elem = bb.find('.edit_heat');
         if (edit_heat_elem.data('surfjudgeEdit_heat'))
             edit_heat_elem.edit_heat('destroy');
         edit_heat_elem.edit_heat(options);

         edit_heat_elem.on('edit_heatdata_changed', function(){
             var cid = $('#categories_select_dropdown').select_dropdown('get_selected_value');
             refresh_data_table(cid);
             bootbox.hideAll();
         });
     });
 }
 // register functionality for "new heat" button
 $('.new_heat_btn').on('click', function(){
     var cid = $('#categories_select_dropdown').select_dropdown('get_selected_value');
     edit_heat({category_id: cid});

 });

 $('#heats_table').on('click-row.bs.table', function (e, row, $element) {
     if (typeof(row) === 'undefined')
         return;
     edit_heat({heat_id: row['id']});
 });
</script>

{% endblock javascript %}
