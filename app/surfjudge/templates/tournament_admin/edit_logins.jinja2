{% extends "base_template.jinja2" %}

{% block nav_items %}['#nav_item_admin']{% endblock nav_items %}

{% block title %}Edit Logins{% endblock title %}


{% block css %}
{{ super() }}

<style>
.scrollable-menu{
    height: auto;
    max-height: 200px;
    overflow-x: hidden;
}
</style>

{% endblock css %}

{% block content %}

<!-- All judges table -->
<div class="container">
    <button type="button" id="new_btn" class="btn btn-standard btn-lg"><span class="fa fa-plus"></span>&nbsp;New Login</button>

    <br><br>

    <table class="table table-striped"
           id="data_table"
           data-toggle="table"
           data-url="/rest/logins"
           data-sort-name="id"
           date-sort-order="asc">
        <thead>
            <tr>
                <th data-field="id">Username</th>
                <th data-field="groups" data-sortable="true">Roles</th>
            </tr>
        </thead>
    </table>
</div>
{% endblock content %}


{% block modals %}

{% endblock modals %}


{% block javascript %}
{{ super() }}
<script src="/static/bootbox/bootbox.min.js"></script>

<script>
 function edit_login(data){
     var data = data || {};
     var is_new_login = $.isEmptyObject(data);
     var html = $([
         '<div class="form-group row">',
         '    <label class="col-2 col-form-label">Username</label>',
         '    <div class="col-sm-10">',
         '        <input type="hidden" class="old_id">',
         '        <input type="text" class="form-control login_input" data-key="id" placeholder="Username">',
         '    </div>',
         '</div>',
         '<div class="form-group row">',
         '    <label class="col-2 col-form-label">Password</label>',
         '    <div class="col-sm-10">',
         '        <input type="password" class="form-control login_input" data-key="password" placeholder="Password">',
         '    </div>',
         '</div>',
         '',
         '<div class="form-group row">',
         '    <label class="col-2 control-label">Roles</label>',
         '    <div class="col-10 groups_section">',
         '    </div>',
         '</div>',
     ].join(' '));


     var groups = [{label: 'Admin', key: 'ac_admin'}, {label: 'Judge', key: 'ac_judge'}, {label: 'Commentator', key: 'ac_commentator'}];
     $.each(groups, function(idx, role){
         var elem = $('<div>', {class: 'checkbox'})
             .append($('<label>', {class: 'col-form-label'})
                 .append($('<input>', {class: 'login_input',
                                       type: 'checkbox',
                                       data: {key: role['key']}})
                 ).append($('<span>', {text: role['label']}))
             );
         html.find('.groups_section').append(elem);
     });


     var bb = bootbox.dialog({
         title: 'Edit Login',
         message: html,
         buttons: {
             'delete': {
                 label: 'Delete',
                 className: is_new_login ? 'btn-danger disabled' : 'btn-danger',
                 callback: function(){
                     if (is_new_login) {
                         return false;
                     }
                     // get data
                     var data = {}
                     bb.find('.login_input').each(function(){
                         data[$(this).data('key')] = $(this).val();
                     });

                     // upload
                     $.ajax({
                         url: '/rest/logins/' + data['id'],
                         type: 'DELETE',
                     })
                     .done(function(){
                         $('#data_table').bootstrapTable('refresh');
                     });
                 },
             },
             'cancel': {
                 label: 'Cancel',
             },
             'confirm': {
                 label: 'Save',
                 className: 'btn-primary',
                 callback: function(){
                     // get data
                     var data = {};
                     var groups = [];
                     var success = true;
                     bb.find('.login_input').each(function(){
                         var key = $(this).data('key');
                         if ($(this).attr('type') == 'checkbox'){
                             if ($(this).prop('checked'))
                                 groups.push(key);
                         } else if (key == 'password') {
                             var pw = $(this).val();
                             if (is_new_login && (pw.length == 0)) {
                                alert('Provide a password for a new login!');
                                success = false;
                                return;
                             } else if (pw.length > 0) {
                                 data[key] = pw;
                             }
                         } else {
                             data[key] = $(this).val();
                         }
                     });
                     if (!success) {
                         return false;
                     }
                     data['groups'] = groups;
                     if (is_new_login) {
                         var old_id = 'new';
                     } else {
                         var old_id = bb.find('.old_id').first().val();
                     }

                     // upload
                     $.post('/rest/logins/' + old_id, JSON.stringify(data))
                      .done(function(){
                          $('#data_table').bootstrapTable('refresh');
                      });
                 },
             },
         },
     });
     bb.init(function(){
         if (is_new_login) {
             console.log('new login');
             return;
         } else {
            bb.find('.login_input').each(function(){
                var key = $(this).data('key');
                if ($(this).attr('type') == 'checkbox'){
                    if ((data['groups'] || []).indexOf(key) >= 0)
                        $(this).prop('checked', true);
                    else
                        $(this).prop('checked', false);
                }
                else
                    $(this).val(data[$(this).data('key')]);
            });

            bb.find('.old_id').first().val(data['id']);
         }
     });
 }


 // register functionality for "new login" button
 $('#new_btn').on('click', function(){
     edit_login();
 });

 // register functionality for selecting login from table
 $('#data_table').on('click-row.bs.table', function (e, row, $element) {
     if (row != null){
         edit_login(row);
     };
 });
</script>

{% endblock javascript %}

{% block modal_javascript %}
{% endblock modal_javascript %}
